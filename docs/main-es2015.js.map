{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAA0C;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,uEACC;QAAA,uEACC;QAAA,2EAAiB;QAAA,+DAAI;QAAA,4DAAQ;QAiE9B,4DAAO;QACP,uEACG;QAAA,yEACA;QAAA,qEAAI;QAAA,uEAAgB;QAAA,oEAAS;QAAA,4DAAI;QAAA,4DAAK;QACtC,4DAAM;QACR,qEACC;QAAA,sEAAI;QAAA,wEAAoB;QAAA,iEAAK;QAAA,4DAAI;QAAA,4DAAK;QACvC,4DAAK;QACH,iEAEA;QAAA,0EACA;QAAA,qEACE;QAAA,0EAAQ;QAAA,qEAAS;QAAA,4DAAS;QAAC,wLAEtB;QAAA,qEAAG;QAAA,iEAAK;QAAA,4DAAI;QAAC,iEAAI;QAAA,qEAAG;QAAA,oEAAQ;QAAA,4DAAI;QAAC,6FAAgC;QAAA,iEAAI;QAAA,iEAC1E;QAAA,4FAA+B;QAAA,0EAAQ;QAAA,kEAAM;QAAA,4DAAS;QAAC,oEACzD;QAAA,4DAAI;QACJ,4DAAM;QACN,iEAEF;QAAA,wEACC;QAAA,4EAAuB;QAAA,gFAAoB;QAAA,4DAAQ;QAChD,iEACH;QAAA,uEACA;QAAA,iEAAI;QAAA,iEACJ;QAAA,0EAA2B;QAAA,wEAAiB;QAAA,kEAAM;QAAA,4DAAI;QAAA,4DAAM;QAC7D,4DAAO;QACR,4DAAO;QACR,4DAAO;;6FDzFM,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;;AAYxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBARlB,2DAAY,aAGZ,uEAAa;6FAKJ,SAAS;cAVrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACdD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'copyPaste';\n}\n","<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title id=\"home\">User</title>\n\t\t<style>\n\t\t\tul {\n\t\t\t\tlist-style-type: none;\n\t\t\t\tmargin:0;\n\t\t\t\tpadding:0;\n\t\t\t\toverflow: hidden;\n\t\t\t\tbackground-color: #333333;\n\t\t\t}\n\t\t\tli a{\n\t\t\t\tdisplay: block;\n\t\t\t\tcolor: white;\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 16px;\n\t\t\t\ttext-decoration: none;\n\t\t\t}\n\t\t\tli {\n\t\t\t\tfloat: left;\n\t\t\t}\n\t\t\tli a:hover{\n\t\t\t\tbackground-color: #111111;\n\t\t\t}\n\t\t\tform{\n                text-align-last:center;\n                padding: 60px;\n                background-color: lightsalmon;\n                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n                color:white;\n            }\n\t\t\th1{\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\t\t\th1 a{\n\t\t\t\tdisplay: block;\n\t\t\t\tcolor: rgb(18, 134, 230);\n\t\t\t\ttext-align:left;\n\t\t\t\tpadding:0;\n\t\t\t\ttext-decoration: none;\n\t\t\t}\n      .title {\n        font-style: italic;\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      }\n      .about {\n        background-color: orange;\n        padding: 10px;\n        font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n      }\n      .signup-button{\n        background-color: #333333;\n        margin: 0;\n      }\n      .signup-button a{\n        display: block;\n\t\t\t\tcolor: white;\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 16px;\n        padding-left: 0;\n        padding-right: 0;\n\t\t\t\ttext-decoration: none;\n      }\n      .signup-button a:hover{\n        background-color: #111111;\n      }\n\t\t</style>\n\t</head>\n\t<body>\n    <div class=\"title\">\n    <h1><a href=\"#home\">copyPaste</a></h1>\n    </div>\n\t\t<ul>\t\t\t\n\t\t\t<li><a href=\"login.htm\">LOGIN</a></li>\n\t\t</ul>\n    <br>\n\n    <div class=\"about\">\n    <p>\n      <strong>copyPaste</strong> is a simple platform where you can store your \n      text data and access on any device you login. You just need to remember \n      your <i>email</i> and <i>password</i> then access your data on the go.<br><br>\n      To use our service you need to <strong>signup</strong> first.\n    </p>\n    </div>\n    <br>\n\n\t\t<form>\n\t\t\t<label for=\"copyPaste\">Enter your data here</label>\n      <br>\n\t\t\t<input type=\"text\" id=\"copyPaste\" size=\"100px\">\n\t\t\t<br><br>\n\t\t\t<div class=\"signup-button\"><a href=\"signup\">signup</a></div>\n\t\t</form>\n\t</body>\n</html>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}